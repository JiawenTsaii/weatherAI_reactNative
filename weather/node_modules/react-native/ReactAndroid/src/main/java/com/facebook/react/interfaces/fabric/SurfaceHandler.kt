/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

package com.facebook.react.interfaces.fabric

import com.facebook.react.bridge.NativeMap
import javax.annotation.concurrent.ThreadSafe

/** Represents a Java variant of the surface, its status and inner data required to display it. */
@ThreadSafe
<<<<<<< HEAD
public interface SurfaceHandler {
=======
interface SurfaceHandler {
>>>>>>> d8fbf97a591e21830818fb4b5745c614f0d90615

  /**
   * Provides current surface id. Id should be updated after each call to {@link
   * SurfaceHandler#stop}
   */
<<<<<<< HEAD
  public val surfaceId: Int

  public val isRunning: Boolean

  public val moduleName: String

  /** Starts the surface if the surface is not running */
  public fun start()

  /** Stops the surface if it is currently running */
  public fun stop()

  public fun setProps(props: NativeMap)
=======
  val surfaceId: Int

  val isRunning: Boolean

  val moduleName: String

  /** Starts the surface if the surface is not running */
  fun start()

  /** Stops the surface if it is currently running */
  fun stop()

  fun setProps(props: NativeMap)
>>>>>>> d8fbf97a591e21830818fb4b5745c614f0d90615

  /**
   * Updates current surface id. Id should be updated after each call to {@link SurfaceHandler#stop}
   */
<<<<<<< HEAD
  public fun setSurfaceId(surfaceId: Int)

  public fun setLayoutConstraints(
=======
  fun setSurfaceId(surfaceId: Int)

  fun setLayoutConstraints(
>>>>>>> d8fbf97a591e21830818fb4b5745c614f0d90615
      widthMeasureSpec: Int,
      heightMeasureSpec: Int,
      offsetX: Int,
      offsetY: Int,
      doLeftAndRightSwapInRTL: Boolean,
      isRTL: Boolean,
      pixelDensity: Float
  )

<<<<<<< HEAD
  public fun setMountable(mountable: Boolean)
=======
  fun setMountable(mountable: Boolean)
>>>>>>> d8fbf97a591e21830818fb4b5745c614f0d90615
}
