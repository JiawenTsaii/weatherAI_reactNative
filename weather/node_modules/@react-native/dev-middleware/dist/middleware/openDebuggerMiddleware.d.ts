/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *
 * @format
 * @oncall react_native
 */

<<<<<<< HEAD
=======
import type { NextHandleFunction } from "connect";
>>>>>>> d8fbf97a591e21830818fb4b5745c614f0d90615
import type { InspectorProxyQueries } from "../inspector-proxy/InspectorProxy";
import type { BrowserLauncher } from "../types/BrowserLauncher";
import type { EventReporter } from "../types/EventReporter";
import type { Experiments } from "../types/Experiments";
import type { Logger } from "../types/Logger";
<<<<<<< HEAD
import type { NextHandleFunction } from "connect";
=======
>>>>>>> d8fbf97a591e21830818fb4b5745c614f0d90615
type Options = Readonly<{
  serverBaseUrl: string;
  logger?: Logger;
  browserLauncher: BrowserLauncher;
  eventReporter?: EventReporter;
  experiments: Experiments;
  inspectorProxy: InspectorProxyQueries;
}>;
/**
 * Open the JavaScript debugger for a given CDP target (direct Hermes debugging).
 *
 * Currently supports Hermes targets, opening debugger websocket URL in Chrome
 * DevTools.
 *
 * @see https://chromedevtools.github.io/devtools-protocol/
 */
declare function openDebuggerMiddleware(
  $$PARAM_0$$: Options
): NextHandleFunction;
export default openDebuggerMiddleware;
